name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: build
      run: cargo build --release
    - name: make tarball
      run: mkdir jwtck-linux && cp target/release/jwtck README.md jwtck-linux && tar -czf jwtck-linux.tar.gz jwtck-linux
    - name: upload tarball
      uses: actions/upload-artifact@v3
      with:
        name: uploads
        path: jwtck-linux.tar.gz

  build-mac:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
    - name: build
      run: cargo build --release
    - name: make zip
      run: mkdir jwtck-mac && cp target/release/jwtck README.md jwtck-mac && zip -r jwtck-mac.zip jwtck-mac
    - name: upload zip
      uses: actions/upload-artifact@v3
      with:
        name: uploads
        path: jwtck-mac.zip

  upload-to-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-mac
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: create release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: download artifacts
        id: download_artifacts
        uses: actions/download-artifact@v3
        with:
          name: uploads
          path: uploads

        # These two steps can probably replaced by one step by setting the asset_name to '*'
      - name: upload linux binary
        id: upload-linux
        uses: actions/upload-release-asset@v1.0.2
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_artifacts.outputs.download-path }}/jwtck-linux.tar.gz
          asset_name: jwtck-linux.tar.gz
          asset_content_type: application/gzip

      - name: upload linux mac
        id: upload-mac
        uses: actions/upload-release-asset@v1.0.2
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_artifacts.outputs.download-path }}/jwtck-mac.zip
          asset_name: jwtck-mac.zip
          asset_content_type: application/zip
